<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee" 
		xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
		xmlns:cache="http://www.springframework.org/schema/cache" xmlns:mvc="http://www.springframework.org/schema/mvc"		
        xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
			http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd"> 

	<description>Spring annotation公共配置</description>

	<!-- 开启MVC注解扫描 -->
	<!-- <mvc:annotation-driven /> -->	

	<!-- 注解支持，声明通用注解，如@Required, @Autowired, @PostConstruct等 -->
	<context:annotation-config />

	<!-- 扫描注解包路径，多个包用逗号分隔，不填pacakge表示扫描当前ApplicationContext中所有的类 -->
	<!-- <dubbo:annotation package="com.foo.bar.action" /> -->

	<!-- 使用annotation IOC 自动注册bean , 并保证@Required、@Autowired的属性被注入  -->
	<context:component-scan base-package="org.frame">
		<!-- 扫描注解包路径 -->
		<!-- <context:include-filter type="annotation" expression="com.alibaba.dubbo.config.annotation.Service" /> -->
		<!-- 排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
			<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/> -->
	</context:component-scan>
	
	<!-- <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" /> -->

	<!-- 填充配置文件变量参数 -->
	<context:property-placeholder ignore-resource-not-found="true" location="classpath*:jdbcbase.properties" />

	<!-- JPA实体管理工厂的配置 -->
	<!-- 默认名称entityManagerFactory,如果不是默认名称必须在web.xml OpenEntityManagerInView中指明 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
		<!--待扫描的实体类包，不再需要persistence.xml了 -->
		<property name="packagesToScan" value="org.frame.persistence.po" />
		
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</property>
		
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		
		<property name="persistenceUnitName"  value="jpa.sample" />
	</bean>
	
 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbcbase.driverClassName}" />
		<property name="jdbcUrl" value="${jdbcbase.bds.url}" />
		<property name="user" value="${jdbcbase.bds.username}" />
		<property name="password" value="${jdbcbase.bds.password}" />
		<property name="acquireIncrement" value="${jdbcbase.c3p0.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${jdbcbase.c3p0.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${jdbcbase.c3p0.acquireRetryDelay}" />
		<property name="autoCommitOnClose" value="${jdbcbase.c3p0.autoCommitOnClose}" />
		<property name="breakAfterAcquireFailure" value="${jdbcbase.c3p0.breakAfterAcquireFailure}" />
		<property name="idleConnectionTestPeriod" value="${jdbcbase.c3p0.idleConnectionTestPeriod}" />
		<property name="maxIdleTime" value="${jdbcbase.c3p0.maxIdleTime}" />
		<property name="checkoutTimeout" value="${jdbcbase.c3p0.checkoutTimeout}" />
		<property name="initialPoolSize" value="${jdbcbase.c3p0.initialPoolSize}" />
		<property name="maxPoolSize" value="${jdbcbase.c3p0.maxPoolSize}" />
		<property name="maxStatements" value="${jdbcbase.c3p0.maxStatements}" />
		<property name="maxStatementsPerConnection" value="${jdbcbase.c3p0.maxStatementsPerConnection}" />
		<property name="numHelperThreads" value="${jdbcbase.c3p0.numHelperThreads}" />
		<property name="testConnectionOnCheckout" value="${jdbcbase.c3p0.testConnectionOnCheckout}" />
	</bean>
	
	<!-- 声明一个Spring提供的JPA事务管理器，传入的参数是Spring中的实体管理器工厂 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- 开启Spring提供的基于注解的声明式事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!-- 重要配置：启用扫描并自动创建代理的功能  -->
	<jpa:repositories base-package="org.frame.persistence.dao" 
		factory-class="org.frame.persistence.dao.SqlRepositoryFactoryBean"
		transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
	

</beans>